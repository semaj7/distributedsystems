Webservices Mini-Test

1

a)

Request-Line has the Structure:
	'Method SP Request-URI SP HTTP-Version CRLF'

b) GET HTTP 1.1 \r\n Host: 192.168.1.1:8080 \r\n Connection: close \r\n\r\n

c) Feature Stateless: All information needed for a successful transaction can be put in the HTTP header fields.
Feature Client-Server: HTTP Requests are categorized in Request and Reply using the HTTP header fields, which corresponds to the client-server principle.

2 a) Client: The client creates a socket by instantiating it with IP-Address and Port and uses it to open and close a connection to the server.
Server: TCPListener listens for incoming data and reacts according to a predefined scheme.

b) Reading from the input-stream results in a blocking behavior. This means that the thread will not continue until the method reads a FIN flag or an EOF. 
Writing to the OutputStream usually does not block, but if you write to the server-buffer so fast that the buffer is overloaded, the call will block.

3 a) Wrong. REST is not a protocol but is a software architectural style to design distributed systems.

b) Wrong. What is described is stateful. Stateless means that the serves does not store client-context.

c) Right.

d) Wrong. JSON can be a data representation of REST but HTML and XML are allowed as well.



4 WS-* Services

a)

The 'Webservice Description Language' (WSDL)-File Defines a Webservice. In case of SunSPOTWebservice the WSDL is stored at
'http://vslab.inf.ethz.ch:8080/SunSPOTWebServices/SunSPOTWebservice?wsdl'

b)

The typedefinitions are imported form schema at 'http://vslab.inf.ethz.ch:8080/SunSPOTWebServices/SunSPOTWebservice?xsd=1' where
	'getSpotResponse' is further defined as type 'sunSpot' which eventually consists of: 
		3 Strings, 2 Switches (String and Boolean), 1 Tilt (3 Doubles).
	'getSpot' consists of a String.


c)

We would use the binding-tag, to bind a porttype to the SMTP-protocol. The SMTP-protocol would be represented by a URI which links to it. The service-address would not have to be changed.

5


